
#include <SPI.h>
#include <Ethernet.h>

// Enter a MAC address and IP address for your controller below.
// The IP address will be dependent on your local network:
byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
};
IPAddress ip(10,10,23,241);

// Initialize the Ethernet server library
// with the IP address and port you want to use
// (port 80 is default for HTTP):
EthernetServer server(80);
String readString;
int led = 8;
int buz=9;
const int temperaturePin = 0;
const int lightPin=A1;
int sensorVal=0;

float getVoltage(int pin)
{
   return (analogRead(pin) * 0.01482814);

}


void setup() {

   // Open serial communications and wait for port to open:
  pinMode(led, OUTPUT); 
  pinMode(buz, OUTPUT); 
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }


  // start the Ethernet connection and the server:
  Ethernet.begin(mac, ip);
  server.begin();

}


void loop()
{


  float voltage, degreesC, degreesF;
  voltage = getVoltage(temperaturePin);
  degreesC = (voltage - 0.5) * 100.0;
  degreesF = degreesC * (9.0/5.0) + 32.0;
    
  sensorVal=analogRead(lightPin);
  







  // listen for incoming clients
  EthernetClient client = server.available();
  if (client)

  {
    Serial.println("new client");

    while (client.connected())
    { 
      if (client.available())

      {
        char c = client.read();

        //read char by char HTTP request
        if (readString.length() < 100)

        {

          //store characters to string
          readString += c;
          //Serial.print(c);


          Serial.write(c);
          // if you've gotten to the end of the line (received a newline
          // character) and the line is blank, the http request has ended,
          // so you can send a reply
          //if HTTP request has ended
          if (c == '\n') {
            Serial.println(readString); //print to serial monitor for debuging
//--------------------------------------------------------------------------------------------------------
// Needed to Display Site:
client.println("HTTP/1.1 200 OK"); //send new page
            client.println("Content-Type: text/html");
            client.println();
            client.println("<HTML>");
            client.println("<HEAD>");

//--------------------------------------------------------------------------------------------------------
//-------------------------------------------------

// what is being Displayed :     
        
            client.println("<TITLE>Home Automation</TITLE>");
             client.println("<center >");
            client.println("</HEAD>");
            client.println("<BODY>");
            client.println("<H1>Home Automation</H1>");
            client.println("<hr />");
            client.println("<center>");
            client.println("<meta http-equiv='refresh' content='2'>");
            client.println("<h3> Temperature in C: ");
                client.println(degreesC);
                client.println("</h3>");
                client.println("<h3> Temperature in F: ");
                client.println(degreesF);
                client.println("</h3>");
                if(sensorVal>400){
                    client.println("<h3> Extremely Bright");
                    client.println("</h3>");  
                  }

                  else if(sensorVal>200 && sensorVal<400){
                    client.println("<h3> Normal Day");
                    client.println("</h3>");  
                  }

                  
                  else if(sensorVal<200 ){
                    client.println("<h3>Dark");
                    client.println("</h3>");  
                  }
                
              
            
            
            
          
            
            
            
            
            
            
            client.println("<a href=\"/?lighton\"\"><h2>Turn On Light</h2></a><br/>");
            client.println("<a href=\"/?lightoff\"\"><h2>Turn Off Light</h2></a><br />");    
            client.println("<a href=\"/?buzzon\"\"><h2>Turn On Buzzer</h2></a><br/>");
            client.println("<a href=\"/?buzzoff\"\"><h2>Turn Off Buzzer</h2></a><br />");     
  
   
            client.println("</BODY>");
            client.println("</HTML>");

            
       
            delay(1);
            //stopping client
            
            client.stop();
          
            
            //-------------------------------------------------
           
            
            
            
            // Code which needs to be Implemented:
            if(readString.indexOf("?lighton") >0)//checks for on
            {
              digitalWrite(8, HIGH);    // set pin 8 high
              Serial.println("Led On");
            }
            else{
              if(readString.indexOf("?lightoff") >0)//checks for off
              {
                digitalWrite(8, LOW);    // set pin 8 low
                Serial.println("Led Off");
              }
            }



            if(readString.indexOf("?buzzon") >0)//checks for on
            {
              digitalWrite(9, HIGH);    // set pin 8 high
              Serial.println("Buzzer On");
            }
            else{
              if(readString.indexOf("?buzzoff") >0)//checks for off
              {
                digitalWrite(9, LOW);    // set pin 8 low
                Serial.println("Buzzer Off");
              }
            }

            
           

            //clearing string for next read
            readString="";

            // give the web browser time to receive the data
            delay(1);
            // close the connection:
            client.stop();
            Serial.println("client disonnected");

          }
        }
      }
    }
  }
}    